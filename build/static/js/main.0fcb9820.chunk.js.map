{"version":3,"sources":["Context/AppReducer.js","Context/Globalstate.js","Components/Balance.js","Components/Addtransaction.js","Components/IncomeTransaction.js","Components/Incomelist.js","Components/ExpenseTransaction.js","Components/Expenselist.js","App.js","serviceWorker.js","index.js"],"names":["state","action","type","incometransactions","payload","expensetransactions","filter","incometransaction","id","expensetransaction","initialstate","GlobalContext","createContext","GlobalContextProvider","children","useReducer","AppReducer","dispatch","Provider","value","addincome","addexpense","deletetransaction","Balance","useContext","incomeamounts","map","incomeamount","expenseamounts","expenseamount","totalincome","reduce","acc","item","toFixed","totalexpenses","className","Addtransaction","useState","incometext","income","setincome","onchangeincome","e","target","name","expensetext","expense","setexpense","onchangeexpense","onSubmit","preventDefault","newincometransaction","uuidv4","placeholder","autoComplete","onChange","newexpensetransaction","IncomeTransaction","onClick","Incomelist","key","ExpenseTransaction","Expenselist","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0fcb9820.chunk.js","sourcesContent":["export default (state, action) => {\n    switch (action.type) {\n        case 'ADD_INCOME':\n            return {\n                ...state,\n                incometransactions: [action.payload, ...state.incometransactions]\n            }\n\n        case \"ADD_EXPENSE\":\n            return {\n                ...state,\n                expensetransactions: [action.payload, ...state.expensetransactions]\n            };\n        case \"DELETE_TRANSACTION\":\n            return {\n                ...state,\n                incometransactions: state.incometransactions.filter(\n                    incometransaction => incometransaction.id !== action.payload\n                ),\n                expensetransactions: state.expensetransactions.filter(\n                    expensetransaction => expensetransaction.id !== action.payload\n                )\n            };\n\n        default:\n            return state;\n    }\n} ","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\nconst initialstate = {\n    incometransactions: [\n   \n    ],\n    expensetransactions: [\n  \n    ],\n\n};\n\nexport const GlobalContext = createContext(initialstate);\n\nexport const GlobalContextProvider = ({ children }) => {\n\n    const [state, dispatch] = useReducer(AppReducer, initialstate)\n\n    const addincome = incometransaction => {\n        dispatch({\n            type: \"ADD_INCOME\",\n            payload: incometransaction\n        });\n    }\n\n\n    const addexpense = expensetransaction => {\n        dispatch({\n            type: \"ADD_EXPENSE\",\n            payload: expensetransaction\n        });\n    }\n\n    const deletetransaction = id => {\n        dispatch({\n            type: \"DELETE_TRANSACTION\",\n            payload: id\n        });\n    };\n\n\n\n    return (\n\n        <GlobalContext.Provider value={{\n            incometransactions: state.incometransactions,\n            expensetransactions: state.expensetransactions,\n            addincome,\n            addexpense,\n            deletetransaction,\n        }}>\n            {children}\n        </GlobalContext.Provider>\n    )\n\n}\n\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../Context/Globalstate\";\n\nconst Balance = () => {\n    const { incometransactions, expensetransactions } = useContext(GlobalContext);\n\n    const incomeamounts = incometransactions.map(\n        incometransaction => incometransaction.incomeamount\n    );\n\n    const expenseamounts = expensetransactions.map(\n        expensetransaction => expensetransaction.expenseamount\n    );\n\n    const totalincome = incomeamounts\n        .reduce((acc, item) => (acc += item), 0)\n        .toFixed(2);\n\n    const totalexpenses = expenseamounts\n        .reduce((acc, item) => (acc += item), 0)\n        .toFixed(2);\n\n    return (\n        <div className=\"balance\">\n\n            <div className='main-balance' >\n                <h2>Your Balance</h2>\n                <h3>Rs. {(totalincome - totalexpenses).toFixed(2)}</h3>\n            </div>\n            \n            <div className=\"income-expense\">\n\n                <div className=\"plus\">\n                    <h3>Income</h3>\n                    <p>+Rs. {totalincome}</p>\n                </div>\n\n                <div className=\"minus\">\n                    <h3>Expenses</h3>\n                    <p>-Rs. {totalexpenses}</p>\n\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default Balance\n","import React, { useState, useContext } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport { GlobalContext } from '../Context/Globalstate';\n\n\nconst Addtransaction = () => {\n\n    const { addincome, addexpense } = useContext(GlobalContext)\n\n    const [income, setincome] = useState({\n        incometext: \"\",\n        incomeamount: 0,\n    });\n\n    const { incometext, incomeamount } = income;\n\n    const onchangeincome = (e) => {\n        setincome({ ...income, [e.target.name]: e.target.value });\n    };\n\n    const onsubmitincome = (e) => {\n        e.preventDefault();\n\n        if (incometext !== \"\") {\n            const newincometransaction = {\n                id: uuidv4(),\n                incometext,\n                incomeamount: incomeamount * 1,\n            };\n\n            addincome(newincometransaction);\n\n            setincome({\n                incometext: \"\",\n                incomeamount: 0,\n            })\n        }\n    }\n\n\n\n\n    const [expense, setexpense] = useState({\n        expensetext: \"\",\n        expenseamount: 0,\n    });\n\n    const { expensetext, expenseamount } = expense;\n\n    const onchangeexpense = (e) => {\n        setexpense({ ...expense, [e.target.name]: e.target.value });\n    };\n\n    const onsubmitexpense = (e) => {\n        e.preventDefault();\n\n        if (expensetext !== \"\") {\n            const newexpensetransaction = {\n                id: uuidv4(),\n                expensetext,\n                expenseamount: expenseamount * 1,\n            };\n\n            addexpense(newexpensetransaction);\n\n            setexpense({\n                expensetext: \"\",\n                expenseamount: 0,\n            })\n        }\n    }\n\n\n    return (\n\n        <div className='input-group'>\n                <form onSubmit={onsubmitincome}>\n                    <div className='income'>\n                        <input type='text'\n                            placeholder='Add Income...' autoComplete='off'\n                            name='incometext'\n                            value={incometext}\n                            onChange={onchangeincome}>\n                        </input>\n                        <br />\n\n                        <input type='number'\n                            placeholder='Amount...' autoComplete='off'\n                            name='incomeamount'\n                            value={incomeamount}\n                            onChange={onchangeincome}>\n                        </input>\n                        <input type='submit' value='submit'></input>\n                    </div>\n                </form>\n                <form onSubmit={onsubmitexpense}>\n                    <div className='expense'>\n\n                        <input type='text'\n                            placeholder='Add Expense...' autoComplete='off'\n                            name='expensetext'\n                            value={expensetext}\n                            onChange={onchangeexpense}>\n                        </input>\n                        <br />\n                        <input type='number'\n                            placeholder='Amount...' autoComplete='off'\n                            name='expenseamount'\n                            value={expenseamount}\n                            onChange={onchangeexpense}>\n                        </input>\n\n                        <input type='submit' value='submit'></input>\n                    </div>\n                </form>\n        </div>\n    )\n}\n\nexport default Addtransaction;\n","import React, {useContext} from 'react'\nimport { GlobalContext } from '../Context/Globalstate'\n\n\nconst IncomeTransaction = ({incometransaction}) => {\n    \n    const { deletetransaction } = useContext(GlobalContext);\n\n    return (\n        \n        <li className='transaction'>\n            <span className='transaction-text'>{incometransaction.incometext}</span>\n            <span className='transaction-amount'>Rs.{incometransaction.incomeamount}</span>\n            <button onClick={() => deletetransaction(incometransaction.id)} className=\"delete-btn\">X\n            </button>\n\n        </li>\n    )\n}\n\nexport default IncomeTransaction\n","import React, { useContext } from 'react'\nimport { GlobalContext } from '../Context/Globalstate'\nimport IncomeTransaction from './IncomeTransaction'\n\n\n\nconst Incomelist = () => {\n\n    const { incometransactions } = useContext(GlobalContext)\n\n\n\n    return (\n\n        <div className='transactions transactions-income'>\n\n            <h2>Income History</h2>\n\n\n            <ul className='transaction-list'>\n                {incometransactions.map\n                    (incometransaction => (\n                        <IncomeTransaction\n                            key={incometransaction.id}\n                            incometransaction={incometransaction}\n                        />\n                    ))}\n\n            </ul>\n\n        </div>\n    )\n}\n\nexport default Incomelist\n","import React, { useContext } from 'react'\nimport { GlobalContext } from '../Context/Globalstate'\n\nconst ExpenseTransaction = ({expensetransaction}) => {\n\n    const { deletetransaction } = useContext(GlobalContext);\n\n    \n    return (\n\n        <li className='transaction'>\n            <span className='transaction-text'>{expensetransaction.expensetext}</span>\n            <span className='transaction-amount'>Rs.{expensetransaction.expenseamount}</span>\n            <button onClick={() => deletetransaction(expensetransaction.id)} className=\"delete-btn\">x          \n            </button>\n\n        </li>\n    )\n}\n\nexport default ExpenseTransaction\n","import React, { useContext } from 'react'\nimport { GlobalContext } from '../Context/Globalstate'\nimport ExpenseTransaction from './ExpenseTransaction'\n\n\n\nconst Expenselist = () => {\n\n    const {expensetransactions} = useContext(GlobalContext)\n\n    return (\n\n        <div className='transactions transactions-expense'>\n\n            <h2>Expense History</h2>\n\n            <ul className='transaction-list'>\n                {expensetransactions.map\n                (expensetransaction => (\n                <ExpenseTransaction\n                key={expensetransaction.id}\n                expensetransaction = {expensetransaction}\n                    />\n                ))}\n\n            </ul>\n        </div>\n    )\n}\n\nexport default Expenselist\n","import React from 'react';\nimport Balance from './Components/Balance'\nimport Income from './Components/Income'\nimport Addtransaction from './Components/Addtransaction'\nimport './App.css';\nimport Incomelist from './Components/Incomelist';\nimport Expenselist from './Components/Expenselist';\nimport { GlobalContextProvider } from './Context/Globalstate';\n\nfunction App() {\n  return (\n\n    <GlobalContextProvider>\n\n      <div className='container'>\n        <div className='header'><h1>My Expense Tracker</h1> </div>\n        <div className='center'>\n          <div className='sidebar'><><Balance /></></div>\n          <div className='main'>\n            <div className='input'>\n              <><Addtransaction /></>\n            </div>\n            <div className='history'>\n              <div className='income-history'><Incomelist /></div>\n              <div className='expense-history'><Expenselist /></div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </GlobalContextProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}